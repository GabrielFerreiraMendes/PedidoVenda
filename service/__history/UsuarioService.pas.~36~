unit UsuarioService;

interface

uses Datasnap.DBClient, Data.DB, Usuario, System.Generics.Collections,
FireDAC.Comp.Client, uDmPrincipal, System.Classes;

type
 TUsuarioService = Class
   public
    class function getClientDataSetUsuario(): TClientDataSet;
    class function getListaUsuario(): TObjectList<TUsuario>;
 End;

implementation

{ TUsuarioService }

class function TUsuarioService.getClientDataSetUsuario(aOwner: TComponent): TClientDataSet;
var
 cds: TClientDataSet;
 usuarioLista: TObjectList<TUsuario>;
 usuario: TUsuario;
begin
 cds := TClientDataSet.Create(aOwner);

 cds.close;
 cds.FieldDefs.Clear;
 cds.FieldDefs.Add('CODIGO', ftInteger);
 cds.FieldDefs.Add('NOME', ftString);
 cds.FieldDefs.Add('CIDADE', ftString);
 cds.FieldDefs.Add('UF', ftString);
 cds.CreateDataSet;

 usuarioLista := getListaUsuario;

 for usuario in usuarioLista do
   begin
     cds.Insert;
     cds.FieldByName('CODIGO').AsInteger := usuario.Codigo;
     cds.FieldByName('NOME').AsString := usuario.Nome;
     cds.FieldByName('CIDADE').AsString := usuario.Cidade;
     cds.FieldByName('UF').AsString := usuario.Uf;
     cds.Post;
   end;

end;

class function TUsuarioService.getListaUsuario: TObjectList<TUsuario>;
var
 qry: TFDQuery;
 usuarioLista: TObjectList<TUsuario>;
begin
  qry := TFDQuery.Create(nil);
  usuarioLista := TObjectList<TUsuario>.Create;

  try
    qry.Connection := dmPrincipal.FDConnection1;

    qry.SQL.Clear;
    qry.SQL.Add('SELECT * FROM USUARIO');
    qry.Open;

    qry.First;
    while not qry.Eof do
    begin
      usuarioLista.Add(TUsuario.Create(qry.FieldByName('CODIGO').AsInteger,
                                       qry.FieldByName('NOME').AsString,
                                       qry.FieldByName('CIDADE').AsString,
                                       qry.FieldByName('UF').AsString));

     qry.Next;
    end;
  finally
   Result := usuarioLista;
  end;
end;

end.
